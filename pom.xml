<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>radixsorting</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>radixsorting</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>17</java.version>
		<springdoc.version>1.6.9</springdoc.version>
		<jacoco.version>0.8.10</jacoco.version> <!-- Define JaCoCo version -->
	</properties>

	<dependencies>
		<!-- 1) Spring Boot Starter for Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>3.4.4</version>
		</dependency>

		<!-- 2) Spring Boot Starter Validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>3.4.4</version>
		</dependency>

		<!-- 3) Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<optional>true</optional>
		</dependency>

		<!-- 4) SpringDoc OpenAPI for Swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.6</version>
		</dependency>

		<!-- 5) Jackson Databind for JSON serialization/deserialization -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.15.2</version>
		</dependency>

		<!-- ====================== TEST DEPENDENCIES ========================= -->
		<!-- 6) Spring Boot Starter Test (Junit, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>3.4.4</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 7) Mockito Core and Mockito JUnit Jupiter -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.5.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.5.0</version>
			<scope>test</scope>
		</dependency>

		<!-- 8) Springdoc -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.14</version>
		</dependency>

		<!-- 9) equalsverifier -->
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier-nodep</artifactId>
			<version>3.19.1</version>
			<scope>test</scope>     
		</dependency>
		
		<!-- 10) Logging -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<version>3.4.4</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Maven Resources Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding> <!-- Ensure correct encoding -->
				</configuration>
			</plugin>

			<!-- JaCoCo Maven Plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- 1) Prepare the agent before tests -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<append>true</append>
						</configuration>
					</execution>

					<!-- 2) Generate the JaCoCo report after tests -->
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<formats>
								<format>HTML</format>
							</formats>
							<!-- By default, Jacoco places the HTML/CSV/XML outputs in target/site/jacoco -->
							 <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>

					<!-- 3) Enforce coverage rules at 'verify' phase -->
					<execution>
						<id>check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<!-- Add coverage limits if desired -->
										<limits>
												<limit>
														<counter>LINE</counter>
														<value>COVEREDRATIO</value>
														<minimum>0.90</minimum>
												</limit>
										</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- check style plugin for doc string voilations -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configLocation>src/main/resources/checkstyle.xml</configLocation>
					<failOnViolation>true</failOnViolation>
				</configuration>
			</plugin>	

			<!-- Spotless Maven Plugin -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.37.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
					<execution>
						<id>apply</id>
						<phase>none</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<java>
						<googleJavaFormat/>
					</java>
				</configuration>
			</plugin>
		</plugins> 
	</build>

</project>
